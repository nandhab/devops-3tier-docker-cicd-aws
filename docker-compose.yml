networks:
  app-network:

services:
  db:
    image: postgres:15
    container_name: db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: notesdb
      POSTGRES_HOST_AUTH_METHOD: "md5"
    ports:
      - "5432:5432"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d/

    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: backend
    ports:
      - "8000:8000"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  frontend:
    image: nginx:latest
    container_name: frontend
    volumes:
      - ./frontend/index.html:/usr/share/nginx/html/index.html
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf
      - ./frontend/default.conf:/etc/nginx/conf.d/default.conf
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "8080:80"
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  pgdata:
