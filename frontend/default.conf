# conf.d/default.conf

# WebSocket upgrade mapping (http context include is fine in conf.d)
map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

# --- HTTP: serve ACME challenge (for later) and redirect to HTTPS ---
server {
    listen 80;
    listen [::]:80;
    server_name localhost;

    # Everything else -> HTTPS
    location / {
        return 301 https://$host$request_uri;
    }

    location = /nginx_status {
        stub_status;
        access_log off;
        # For local dev you can relax this, but ideally restrict:
        allow all;
    }

}

# --- HTTPS: localhost with self-signed certs ---
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name localhost;

    # Self-signed certs you generate and mount to the container:
    ssl_certificate     /etc/ssl/localcerts/localhost.crt;
    ssl_certificate_key /etc/ssl/localcerts/localhost.key;

    # (When you move to a real domain + Certbot, swap to:)
    # ssl_certificate     /etc/letsencrypt/live/yourdomain/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/yourdomain/privkey.pem;

    # TLS defaults
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    # Optional strong DH params if you generate them:
    # ssl_dhparam /etc/ssl/dhparam/dhparam.pem;

    # Security headers (enable HSTS only after youâ€™re on a real domain)
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header Referrer-Policy no-referrer-when-downgrade;
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # ---- Static frontend (SPA-friendly) ----
    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ /index.html;
    }

    # ---- Reverse proxy for /notes ----
    location /notes {
        proxy_pass http://backend:8000;
        proxy_redirect off;
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade           $http_upgrade;
        proxy_set_header Connection        $connection_upgrade;
    }
}
